import React, { useEffect, useState } from "react";
import "./WeatherCard.css";

interface currentConditions {
  probability: number,
  qpf: number,
  probabilityForecast: number,
  qpfForecast: number,
}

const WeatherCard: React.FC<currentConditions> = ({ probability, qpf, probabilityForecast, qpfForecast}) => (
  <div className="container-overall">
    <div className="blue-container">
      <div className="blue-header">
        <div className="ceat-logo">CEAT</div>
        <h1 className="blue-container-title">WEATHER FORECAST</h1>
      </div>
      
      <div className="blue-content">
        <div className="cloud-icon">
          <svg width="120" height="80" viewBox="0 0 120 80" fill="none">
            <path d="M85 25C85 11.2 73.8 0 60 0S35 11.2 35 25c0 1.3 0.1 2.6 0.3 3.8C30.6 30.1 27 34.8 27 40.5c0 8.8 7.2 16 16 16h42c6.6 0 12-5.4 12-12s-5.4-12-12-12c-1.3 0-2.5 0.2-3.7 0.6C80.4 29.8 83 27.6 85 25z" fill="rgba(255,255,255,0.8)"/>
            <rect x="45" y="65" width="3" height="12" fill="rgba(255,255,255,0.8)"/>
            <rect x="52" y="65" width="3" height="12" fill="rgba(255,255,255,0.8)"/>
            <rect x="59" y="65" width="3" height="12" fill="rgba(255,255,255,0.8)"/>
            <rect x="66" y="65" width="3" height="12" fill="rgba(255,255,255,0.8)"/>
            <rect x="73" y="65" width="3" height="12" fill="rgba(255,255,255,0.8)"/>
          </svg>
        </div>
        
        <div className="weather-data">
          <div className="probability-label">PROBABILITY%</div>
          <div className="weather-values">
            <div className="qpf-value">{qpf}mm</div>
            <div className="probability-value">{probability}%</div>
          </div>
        </div>
      </div>
    </div>
    
    <div className="orange-container">
      <div className="orange-header">
        <h2>TOMORROW'S FORECAST</h2>
      </div>
      
      <div className="orange-content">
        <div className="small-cloud-icon">
          <svg width="80" height="50" viewBox="0 0 80 50" fill="none">
            <path d="M60 15C60 6.7 52.3 0 43 0S26 6.7 26 15c0 0.8 0.1 1.6 0.2 2.4C22.4 18.6 20 22.4 20 26.8c0 5.5 4.5 10 10 10h30c4.4 0 8-3.6 8-8s-3.6-8-8-8c-0.9 0-1.7 0.1-2.5 0.4C58.6 19.9 60 17.6 60 15z" fill="rgba(255,255,255,0.9)"/>
            <rect x="32" y="40" width="2" height="8" fill="rgba(255,255,255,0.9)"/>
            <rect x="37" y="40" width="2" height="8" fill="rgba(255,255,255,0.9)"/>
            <rect x="42" y="40" width="2" height="8" fill="rgba(255,255,255,0.9)"/>
            <rect x="47" y="40" width="2" height="8" fill="rgba(255,255,255,0.9)"/>
          </svg>
        </div>
        
        <div className="forecast-data">
          <div className="forecast-label">PROBABILITY%</div>
          <div className="forecast-values">
            <div className="forecast-qpf">{qpfForecast}mm</div>
            <div className="forecast-probability">{probabilityForecast}%</div>
          </div>
        </div>
      </div>
    </div>
    {/* Styles moved to external CSS file. */}
    `}</style>
  </div>
);

const WeatherDashboard: React.FC = () => {
  const [weatherData, setWeatherData] = useState<currentConditions>({
    probability: 25,
    qpf: 30,
    probabilityForecast: 20,
    qpfForecast: 25
  });

  // Simulate API call with mock data for demonstration
  useEffect(() => {
    // Mock API call - replace with your actual API
    const fetchWeather = async () => {
      try {
        // Simulating API response
        const mockData = {
          probability: 25,
          qpf: 30,
          probabilityForecast: 20,
          qpfForecast: 25
        };
        setWeatherData(mockData);
      } catch (error) {
        console.error("Weather API error:", error);
      }
    };

    fetchWeather();
  }, []);

  return (
    <div>   
      <WeatherCard {...weatherData} />
    </div>
  );
};

export default WeatherDashboard;